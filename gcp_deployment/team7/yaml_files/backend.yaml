apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-backend
  labels:
    app: spring-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: spring-backend
  template:
    metadata:
      labels:
        app: spring-backend
    spec:
      serviceAccountName: default
      containers:
        - name: spring-backend
          image: registry.gitlab.com/kdg-ti/integratieproject-2/2024-2025/team7/backend:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://127.0.0.1:5432/monopolydb"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
            - name: CORS_PORT
              value: "http://react-frontend-service:80"
          volumeMounts:
            - name: cloudsql
              mountPath: /cloudsql
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 15
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 20
            failureThreshold: 5

        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.11.4
          args:
            - "--structured-logs"
            - "--port=5432"
            - "danielwannadeploy:europe-central2:danielwannadeploy-pg-instance"
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - name: secret-volume
              mountPath: /secrets
              readOnly: true

      imagePullSecrets:
        - name: gitlab-registry-secret
      volumes:
        - name: cloudsql
          emptyDir: {}
        - name: secret-volume
          secret:
            secretName: db-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: spring-backend
  ports:
    - name: backend
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
